An example plugin, providing Music Player Daemon client functionality.

The build script runs makePlugin.pl on mpc.cpp, converting to 
mpc_plugin.cpp. This file is then compiled and linked as a shared
library.

Within mpc.cpp, the following appear interspersed with normal C++
code:

%plugin mpc

defines the name of the plugin (mpc).

%word <word> <paramcount> <text>
{
    ... C++ function ...
}

defines a word function, which takes a given number of parameters.
The parameters are passed in as the "params" array of PluginValue
ptrs (not native Angort values -- Angort does conversions to and
from these.) A "res" PluginValue pointer is also provided which
can be filled in with a value to be stacked.

%init
{
    ... C++ function ...
}

defines the initialisation function, called when the plugin is loaded.


To load a plugin in Angort,

    library "filename" 
    
with the name of the .so file. The symbols defined will be stacked,
so typical usages are:

    library "filename" drop
    
to load without importing any names into the default namespace,

    library "filename" import
    
to import all names, and

    library "filename" [`foo, `bar, `baz] import
    
to only import some.
    
