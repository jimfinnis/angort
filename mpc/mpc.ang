package mpcc

library "./libmpc.so" import

private
:quote |x:| "\"" ?x "\"" ++;
:doshuffle |lst,n:a,b|
    0 ?n range each {
        rand ?lst len % !a
        rand ?lst len % !b
        ?a ?lst get
        ?b ?lst get
        ?a ?lst set
        ?b ?lst set
    }
    ?lst
;

public

:clr
    :"clear the playlist"
    "clear" mpc drop;

:artist
    :"(name -- list) search for songs by an artist"
    quote "search artist " swap + mpc;

:album
    :"(name -- list) search for songs on an album"
    quote "search album " swap + mpc;

:song 
    :"(name -- list) search for songs by title"
    quote "search title " swap + mpc;

:add |x:|
    :"(list or item --) add a list or named song to a playlist"
    ?x type "string" = if
        quote "add " swap + mpc drop
    else
        ?x each {
            "add " i quote + mpc drop
        }
    then
;

:ron 
    :"(--) turn random on" "random on" mpc drop;
:roff 
    :"(--) turn random off" "random off" mpc drop;
    
:grep |list,str:|
    :"(list str -- list) filter a list for a string"
    ?list (?str istridx isnone not) filter;

:m
    :"(cmd --) run an mpc command and list the output"
    mpc each {i.};

:p
    :"(--) start playing"
    "play" mpc drop;

:s
    :"(--) stop playing"
    "stop" mpc drop;

:ps
    :"(--) pause"
    "pause" mpc drop;

:l |:stat,x,a,b|
    :"(--) list the current playlist, numbered, indicating the current song"
    "status" mpc dup len 1 > if
        1 swap get !x
        ?x "#" stridx 1+ !a
        ?x "/" stridx 1- !b
        ?a ?b ?a - 1+
        ?x substr toint 1-
    else
        drop -1
    then
    !a
    0!x
    "playlist" mpc each {
        ?x ?a = if
            "> " std$p
        then
        ?x 1+ std$p " " std$p
        i.
        ?x 1+!x
    }
;

:d 
    :"(lst --) dump a list"
    each {i.};


:stat 
    :"(--) show the status"
    "status" m;

:f 
    :"(--) move forwards in current playlist"
    "next" mpc drop;

:b 
    :"(--) move backwards in current playlist"
    "prev" mpc drop;

:go |x:|
    :"(n --) start playing from given song index in playlist"
    "play " ?x +
    mpc drop;

:shuf 
    :"(lst -- lst) shuffle the list"
    dup len doshuffle;

:load
    :"(name --) load a playlist"
    "load " swap + mpc drop;
:save 
    :"(name --) save a playlist"
    "save " swap + mpc drop;


endpackage import
