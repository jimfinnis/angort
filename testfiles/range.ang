#single range, totalling up

0 
1 10 1 range each { i + }
55 = "range1" assert
0 gccount = "range1gc" assert

# nested ranges

:mkrange 1 10 1 range ;
0 mkrange each { mkrange each {i j * + }}
3025 = "range2"  assert
0 gccount = "range2gc" assert

# reiteration on a stored range
global t
1 5 1 range !t
0 ?t each {i +} 
15 = "range3" assert
1 gccount = "range3gc" assert # ?t holds a range

# smoke test to screw up the stack
0 
1 10 1 range each { i + }
55 = "range4" assert 

# then try the stored range again
0 ?t each {i +} 
15 = "range5" assert
1 gccount = "range5gc" assert # ?t holds a range

# finally, try to iterate over the same range nested.
mkrange !t
0 ?t each {?t each {i j * +}}
3025 = "range6"  assert
1 gccount = "range6gc" assert
0 !t
0 gccount = "range6gc2" assert

quit
