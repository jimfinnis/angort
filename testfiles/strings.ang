"foo" "foo" = "streq" assert
"foob" "foo" != "streq" assert
"foo" "bar" + "foobar" = "strconc" assert

"foo" 1 + "foo1" = "strconv" assert

global a
global b

"foo" dup !a !b
?a "foo" = "strdup1" assert
?b "foo" = "strdup2" assert
?a "bar" + !b 
?a "foo" = "strdup3" assert
?b "foobar" = "strdup4" assert

"fooble" 3 * "fooblefooblefooble" = "repeat" assert

:qq dup "**"p p "**".;

"abcdefg" !a
-1 4 ?a slice "abcd" =   "slice1" assert

0 4 ?a slice "abcd" =   "slice1" assert
-1 4 ?a slice "abcd" =   "slice1a" assert
2 4 ?a slice "cdef" =   "slice2" assert
4 4 ?a slice "efg" =   "slice3" assert
6 4 ?a slice "g" =   "slice4" assert
3 -1 ?a slice "defg" = "slice5" assert
7 1 ?a slice "" = "slice6" assert
8 1 ?a slice "" = "slice7" assert

"foo" !A
?A clone !B
"w" 0 ?A set
?A "woo" = "clone1" assert
?B "foo" = "clone2" assert


"b" 0 ?A set
?A "boo" = "strset1" assert

0 0 ?A set
?A "0oo" = "strset2" assert
?B "foo" = "clone3" assert


quit


