`io library drop

"/tmp/boojum" "w" io$open !F
0!SNCT
:boo "Boojum " ?SNCT+ "\n"+  ?F io$write ?F io$flush !+SNCT;

gccount!BaseGC
[%] !A
[%] !B

boo
?B `foo ?A set
?A `foo ?B set

gc
?BaseGC 2+ gccount = "cycle1" assert

0 !A
0 !B
1 1 1 drop drop drop
gc
gccount.
?BaseGC gccount = "cycle2a" assert

boo
[%] !A
[% `foo A ] !B
[% `bar B, `fod A] !C
?C `buz ?A set
gccount .
?BaseGC 3+ gccount = "cycle2b" assert

gc
?BaseGC 3+ gccount = "cycle2c" assert
boo
0 !A
0 !B
0 !C
1 1 1 drop drop drop
gc
gccount.
?BaseGC gccount = "cycle4" assert

# hashes appear to be OK, let's check lists.
boo
[10,20,30] !A
[1,2,3,?A,4] !B
?B ?A push
?A each {i.}
gc
gccount.
?BaseGC 2+ gccount  = "listcyc1" assert
0 !A
0 !B
gc
?BaseGC gccount  = "listcyc2" assert
boo
# lists are good, let's do something with closures AND lists

snark
[10,20,30] !A

:mklistprinter |list:| (?list each {i.});

?A mklistprinter
?A push

# clear the locals stack
boo
:foo |a,b,c,d:|;

1 2 3 4 foo
gccount.
?BaseGC 3+ gccount  = "closurecyc1" assert
0!A
gc
gccount.

?BaseGC gccount  = "closurecyc2" assert
boo
quit
