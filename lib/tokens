# standard symbols

*e      :   T_END
*s      :   T_STRING
*i      :   T_IDENT
*n      :   T_INT
*f      :   T_FLOAT
*D      :   T_DOUBLE
*L      :   T_LONG

# digraphs, which take precedence over characters but also
# do not require trailing spaces

*d!=    :   T_NOTEQUAL
*d<=    :   T_LE
*d>=    :   T_GE
*d?`    :   T_HASHGETSYMB
*d!`    :   T_HASHSETSYMB
*d<<    :   T_DOUBLEANGLEOPEN
*d>>    :   T_DOUBLEANGLECLOSE
*d??    :   T_DOUBLEQUERY

# characters, which return the token immediately and do not
# require trailing space

*c{     :   T_OCURLY
*c}     :   T_CCURLY
*c(     :   T_OPREN
*c)     :   T_CPREN
*c[     :   T_OSQB
*c]     :   T_CSQB
*c,     :   T_COMMA
*c<     :   T_LT
*c>     :   T_GT
*c=     :   T_EQUALS
*c+     :   T_ADD
*c/     :   T_DIV
*c-     :   T_SUB
*c*     :   T_MUL
*c;     :   T_SEMI
*c.     :   T_DOT
*c!     :   T_PLING
*c?     :   T_QUESTION
*c@     :   T_AT
*c:     :   T_COLON
*c#     :   T_HASH
*c&     :   T_AMPERSAND
*c|     :   T_PIPE
*c%     :   T_PERC
*c`     :   T_BACKTICK


if	:   T_IF
then	:   T_THEN
else	:   T_ELSE
leave	:   T_LEAVE
dup	:   T_DUP
call	:   T_CALL
global	:   T_GLOBAL
swap	:   T_SWAP
drop	:   T_DROP
not	:   T_NOT
and	:   T_AND
or	:   T_OR
ifleave	:   T_IFLEAVE
const	:   T_CONST
over	:   T_OVER
each	:   T_EACH
include :   T_INCLUDE
stop    :   T_STOP
cmp     :   T_CMP
package :   T_PACKAGE
require :   T_REQUIRE
private :   T_PRIVATE
public  :   T_PUBLIC
def : T_DEF
defconst : T_DEFCONST
recurse : T_RECURSE
self : T_SELF

cases : T_CASES
case : T_CASE
otherwise : T_OTHERWISE
sourceline : T_SOURCELINE
yield : T_YIELD

try : T_TRY
catch : T_CATCH
catchall : T_CATCHALL
endtry : T_ENDTRY
throw : T_THROW
