
[`time,`thread,`io] each {i library drop}

# calculate sum of the factorials of the first 10 nonzero ints.
# Finds each factorial in a thread.

# factorial function
:fac |x:| ?x 1 = if 1 else ?x ?x 1 - fac * then;

:main
    # create the threads, producing a list of thread objects
    [] 1 11 range each {
        # thread argument, thread function (because this is recursive
        # I'm not using an anonymous function)
        i ?fac thread$create,
    } 
    # wait for all threads to complete, then get a list of their
    # results by running retval over the list of threads
    dup thread$join (thread$retval) map
    # use reduce to sum the results
    0 swap (+) reduce.
;

main quit
