# Useful utilities, which may get split into other files and namespaces
# as they get bigger

package util

## Argument check : take a list of argument names, pop that many items
## from the argument list and explode them into the stack:

private
:usage |lst:|
    "Arguments should be: "p
    ?lst (|a:| "<" ?a + ">" +) map " " intercalate.
;


public

:argcheck |list:|
    :"(namelist -- .. arg2 arg1) given a list of args, produces them on stack in reverse order"
    # args is the entire command line, including the script name etc.
    # so let's remove the script name and the executable name
    args len 0 = if ?list usage quit then
    args shift "angort" = if
        args shift drop
    then
    
    args len ?list len != if 
        ?list usage quit
    then
    # remove last N arguments from args, reverse and explode.
    args
    args len ?list len -
    ?list len
    deprecated$slice reverse explode
;


:showAngort |h:tabs,sht|
    :"(val -- str) generate a string representation of a value"
    ?h (|v:|
        ""
        cases
            ?v type `list = if
                "[ " +
                [] ?v each {  i recurse, } "," intercalate +
                " ]" +
            case
            ?v type `hash = if
                "[% " +
                [] ?v each { "`" i + " " + ival recurse + ,} "," intercalate +
                " ]" +
            case
            ?v type `string = if
                "\"" + ?v + "\"" +
            case
            ?v type `symbol = if
                "`" + ?v + 
            case
            ?v tostr +
        otherwise
    )@
;
